version: '3'
services:
  db:
    image: mongo:7.0.0
    container_name: db
    ports:
      - "4000:27017"
    restart: always

  aws-simple-storage-service:
    image: aws-simple-storage-service:0.0.1
    build:
      context: ./aws-simple-storage-service
      dockerfile: Dockerfile-dev
    container_name: aws-simple-storage-service
    ports:
      - "4001:80"
    environment:
      - PORT=80
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
    volumes:
      - ./aws-simple-storage-service/src/main:/app/aws-simple-storage-service/src/main
    restart: always
    depends_on:
      - db

#  azure-storage:
#    image: azure-storage:0.0.1
#    build:
#      context: ./azure-storage
#      dockerfile: Dockerfile-dev
#    container_name: video-storage
#    ports:
#      - "4001:80"
#    environment:
#      - PORT=80
#      - STORAGE_ACCOUNT_NAME=${STORAGE_ACCOUNT_NAME}
#      - STORAGE_ACCESS_KEY=${STORAGE_ACCESS_KEY}
#      - CONTAINER_NAME=${CONTAINER_NAME}
#    volumes:
#      - ./azure-storage/src/main:/app/azure-storage/src/main
#    restart: always

  history:
    image: history:0.0.1
    build:
      context: ./history
      dockerfile: Dockerfile-dev
    container_name: history
    ports:
      - "4002:80"
    environment:
      - PORT=80
    volumes:
      - ./history/src/main:/app/history/src/main
    restart: "always"
    depends_on:
      - broker

  video-streaming:
    image: video-streaming:0.0.1
    build:
      context: ./video-streaming
      dockerfile: Dockerfile-dev
    container_name: video-streaming
    ports:
      - "4003:80"
    environment:
      - PORT=80
      - DBNAME=video_library
      - COLLECTION_NAME=videos
      - VIDEO_STORAGE_HOST=aws-simple-storage-service
      - VIDEO_STORAGE_PORT=80
    volumes:
      - ./video-streaming/src/main:/app/video-streaming/src/main
    depends_on:
      - db
      - broker
    restart: "no"

  broker:
    image: apache/kafka:4.0.0
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "9092:9092"

  database-fixture:
    image: database-fixture:0.0.1
    build:
      context: ./database-fixture
      dockerfile: Dockerfile-dev
    container_name: database-fixture
    ports:
      - "4004:80"
    environment:
      - PORT=80
      - DBNAME=video_library
      - COLLECTION_NAME=videos
    volumes:
      - ./database-fixture/src/main:/app/database-fixture/src/main
    restart: "always"
    depends_on:
      - db
